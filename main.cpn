<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE workspaceElements PUBLIC "-//CPN//DTD CPNXML 1.0//EN" "http://cpntools.org/DTD/6/cpn.dtd">

<workspaceElements>
  <generator tool="CPN Tools"
             version="4.0.1"
             format="6"/>
  <cpnet>
    <globbox>
      <block id="ID1412310166">
        <id>Standard priorities</id>
        <ml id="ID1412310255">val P_HIGH = 100;
          <layout>val P_HIGH = 100;</layout>
        </ml>
        <ml id="ID1412310292">val P_NORMAL = 1000;
          <layout>val P_NORMAL = 1000;</layout>
        </ml>
        <ml id="ID1412310322">val P_LOW = 10000;
          <layout>val P_LOW = 10000;</layout>
        </ml>
      </block>
      <block id="ID1">
        <id>Standard declarations</id>
        <color id="ID85042">
          <id>UNIT</id>
          <unit/>
          <layout>colset UNIT = unit;</layout>
        </color>
        <color id="ID4">
          <id>BOOL</id>
          <bool/>
        </color>
        <color id="ID3">
          <id>INT</id>
          <int/>
        </color>
        <color id="ID1412312409">
          <id>INTINF</id>
          <intinf/>
          <layout>colset INTINF = intinf;</layout>
        </color>
        <color id="ID1412312425">
          <id>TIME</id>
          <time/>
          <layout>colset TIME = time;</layout>
        </color>
        <color id="ID1412322990">
          <id>REAL</id>
          <real/>
          <layout>colset REAL = real;</layout>
        </color>
        <color id="ID1412468330">
          <id>STRING</id>
          <string/>
          <layout>colset STRING = string;</layout>
        </color>
      </block>
      <block id="ID1412613540">
        <id>Parsing declarations</id>
        <ml id="ID1412614525">datatype Token = TSelect
               | TInsert
               | TUpdate
               | TDelete
               | TWhere
               | TInto
               | TFrom
               | TValues
               | TSet
               | TIdentifier of string
               | TReal of real
               | TInt of int
               | TString of string
               | TAnd
               | TOr
               | TLess
               | TGreater
               | TNotEqual
               | TEqual
               | TInvalid of string
               | TOpeningParanthesis
               | TClosingParanthesis
               | TOperatorStar;

fun ParseIntLeft value [] = (SOME value)
  | ParseIntLeft leftVal (ch::x) = if (Char.isDigit ch)
                                   then case (ParseIntLeft (leftVal * 10 + ((ord ch) - 48)) x)
                                          of NONE =&gt; NONE
                                           | (SOME value) =&gt; (SOME value)
                                   else NONE;

fun ParseInt &quot;&quot; = NONE
  | ParseInt value = (ParseIntLeft 0 (String.explode value));

fun subunitary value = if value &gt;= 1.0 then subunitary (value / 10.0) else value;

fun ParseRealLeft value [] = (SOME value)
  | ParseRealLeft leftVal (ch::x) = if (Char.isDigit ch)
                                    then case (ParseRealLeft (leftVal * 10.0 + real((ord ch) - 48)) x)
                                           of NONE =&gt; NONE
                                            | (SOME value) =&gt; (SOME value)
                                    else if (Char.contains &quot;.&quot; ch)
                                         then case (ParseIntLeft 0 x)
                                                of NONE =&gt; NONE
                                                 | (SOME value) =&gt; (SOME (leftVal + (subunitary (real(value)))))
                                         else NONE;

fun ParseReal &quot;&quot; = NONE
  | ParseReal value = (ParseRealLeft 0.0 (String.explode value));

  
fun ParseString &quot;&quot; = NONE
  | ParseString value = if (String.isPrefix &quot;&apos;&quot; value) andalso (String.isSuffix &quot;&apos;&quot; value)
                        then case (String.tokens (fn c =&gt; c = #&quot;&apos;&quot; ) value)
                               of (token::[]) =&gt; (SOME token)
                                | _ =&gt; NONE
                        else NONE;

fun ParseIdentifierChr [] = NONE
  | ParseIdentifierChr (ch::x) = if (Char.isAlpha ch) then (SOME (String.implode (ch::x))) else NONE;

fun ParseIdentifier &quot;&quot; = NONE
  | ParseIdentifier value = (ParseIdentifierChr (String.explode value));

fun ParseDynamic tokenStr = case (ParseInt tokenStr)
                              of (SOME value) =&gt; (TInt value)
                               | NONE =&gt; case (ParseReal tokenStr)
                                           of (SOME value) =&gt; (TReal value)
                                            | NONE =&gt; case ParseString tokenStr
                                                        of (SOME value) =&gt; (TString value)
                                                         | NONE =&gt; case ParseIdentifier tokenStr 
                                                                     of (SOME value) =&gt; (TIdentifier value)
                                                                      | NONE =&gt; (TInvalid tokenStr);

fun lower str = String.translate (fn c =&gt; String.str (Char.toLower c)) str

fun ParseToken tokenStr = case lower tokenStr
                            of &quot;&lt;&quot;      =&gt; TLess
                             | &quot;&gt;&quot;      =&gt; TGreater
                             | &quot;=&quot;      =&gt; TEqual
                             | &quot;~&quot;      =&gt; TNotEqual
                             | &quot;(&quot;      =&gt; TOpeningParanthesis
                             | &quot;)&quot;      =&gt; TClosingParanthesis
                             | &quot;or&quot;     =&gt; TOr
                             | &quot;and&quot;    =&gt; TAnd
                             | &quot;select&quot; =&gt; TSelect
                             | &quot;update&quot; =&gt; TUpdate
                             | &quot;insert&quot; =&gt; TInsert
                             | &quot;delete&quot; =&gt; TDelete
                             | &quot;where&quot;  =&gt; TWhere
                             | &quot;into&quot;   =&gt; TInto
                             | &quot;from&quot;   =&gt; TFrom
                             | &quot;values&quot; =&gt; TValues
                             | &quot;set&quot;    =&gt; TSet
                             | &quot;*&quot;      =&gt; TOperatorStar
                             | value    =&gt; ParseDynamic tokenStr


fun SplitByDelimitersLeft f (lastPos, lastToken) (currentPos, []) = (lastPos, lastToken)::nil
  | SplitByDelimitersLeft f (lastPos, lastToken) (currentPos, (ch::x)) = if (f ch)
                                           then (lastPos, lastToken) ::
                                                (currentPos, ch::nil) ::
                                                (SplitByDelimitersLeft f (currentPos + 1, []) ((currentPos + 1), x))
                                           else (SplitByDelimitersLeft f (lastPos, (List.concat [lastToken, (ch::nil)])) ((currentPos + 1), x)); 

fun SplitByDelimiters f &quot;&quot; = []
  | SplitByDelimiters f s = map (fn (pos, token) =&gt; (pos, (String.implode token))) (SplitByDelimitersLeft f (0, []) (0, (String.explode s)))

fun isNotNonOperatorDelimiter s &quot;&quot; = false
  | isNotNonOperatorDelimiter s delimiters = case String.tokens (fn c =&gt; Char.contains delimiters c) s
                                               of [] =&gt; false
                                                | _ =&gt; true;

fun SplitBySpecialTokens statement = SplitByDelimiters (fn c =&gt; Char.contains &quot; ,=&lt;&gt;~()&quot; c) statement;

fun SplitTokens statement = List.filter (fn (pos, token) =&gt; isNotNonOperatorDelimiter token &quot; ,&quot;) (SplitBySpecialTokens statement);

fun Tokenize statement = map (fn (pos, token) =&gt; (pos, ParseToken token)) (SplitTokens statement);

(*SELECT col1 FROM table WHERE ;*)
(*INSERT INTO table(col1, col2) VALUES 1, &apos;2&apos;;*)
(*UPDATE table SET col1=a WHERE ;*)
(*DELETE FROM table WHERE ;*)

datatype &apos;a ParseState = ParseError of int * string
                       | Result of &apos;a

infixr 9 &gt;&gt;= 
fun a &gt;&gt;= f = case a
                of (ParseError (columnNo, msg)) =&gt; ParseError (columnNo, msg)
                 | (Result result) =&gt; f result;

fun return a = Result a;

datatype ColNameList = All
                     | Columns of (string list);

fun ParseColNameList ((_, (TIdentifier col))::rest) = (ParseColNameList rest)
                                                  &gt;&gt;= (fn (Columns cols, rest) =&gt; return (Columns (col::cols), rest))
  | ParseColNameList tokens = return (Columns [], tokens);

fun ParseSelectColNameList ((_, TOperatorStar)::rest) = return (All, rest)
  | ParseSelectColNameList ((columnNo, (TIdentifier col))::rest) = ParseColNameList ((columnNo, TIdentifier col)::rest)
  | ParseSelectColNameList ((columnNo, _)::rest) = ParseError (columnNo, &quot;Expected columns&quot;)
  | ParseSelectColNameList [] = ParseError (~1, &quot;Expected columns&quot;);

fun ParseTable ((_, TFrom)::(_, TIdentifier tableName)::rest) = return (tableName, rest)
  | ParseTable ((_, TFrom)::(columnNo, _)::rest) = ParseError (columnNo, &quot;Expected table name&quot;)
  | ParseTable ((columnNo, _)::rest) = ParseError (columnNo, &quot;Expected keyword FROM&quot;)
  | ParseTable [] = ParseError (~1, &quot;Expected keyword FROM&quot;);


datatype Value = Int of int
               | Real of real
               | String of string
               | Identifier of string;

datatype Expr = Equal of Value * Value
              | Greater of Value * Value
              | Less of Value * Value
              | NotEqual of Value * Value;

datatype WhereCondition = NoCondition
                        | Single of Expr
                        | And of WhereCondition * WhereCondition
                        | Or of WhereCondition * WhereCondition;


fun ParseValue [] = ParseError (~1, &quot;Expected value or identifier.&quot;)
  | ParseValue (token::rest) = 
    case token
      of (_, (TInt value))        =&gt; return (Int value, rest)
       | (_, (TReal value))       =&gt; return (Real value, rest)
       | (_, (TString value))     =&gt; return (String value, rest)
       | (_, (TIdentifier value)) =&gt; return (Identifier value, rest)
       | (columnNo, _)              =&gt; ParseError (columnNo, &quot;Expected value or identifier.&quot;);

fun ParseExpr tokens = (ParseValue tokens)
                   &gt;&gt;= (fn (rvalue, rest) =&gt;
        (case rest
           of ((_, TEqual)::rest)    =&gt; (ParseValue rest) &gt;&gt;= (fn (lvalue, rest) =&gt; return (Equal (rvalue, lvalue), rest)) 
            | ((_, TGreater)::rest)  =&gt; (ParseValue rest) &gt;&gt;= (fn (lvalue, rest) =&gt; return (Greater (rvalue, lvalue), rest))
            | ((_, TLess)::rest)     =&gt; (ParseValue rest) &gt;&gt;= (fn (lvalue, rest) =&gt; return (Less (rvalue, lvalue), rest))
            | ((_, TNotEqual)::rest) =&gt; (ParseValue rest) &gt;&gt;= (fn (lvalue, rest) =&gt; return (NotEqual (rvalue, lvalue), rest))
            | ((columnNo, _)::rest) =&gt; ParseError (columnNo, &quot;Expected operator&quot;)
            | [] =&gt; ParseError (~1, &quot;Expected operator&quot;)));

fun ParseWhereNextCondition ParseWhereConditions (expr, []) = return (expr, [])
  | ParseWhereNextCondition ParseWhereConditions (expr, (token::rest)) = 
    case token
        of (_, TAnd) =&gt; (ParseWhereConditions rest) &gt;&gt;= (fn (condition, rest) =&gt; return (And (expr, condition), rest))
         | (_, TOr) =&gt; (ParseWhereConditions rest) &gt;&gt;= (fn (condition, rest) =&gt; return (Or (expr, condition), rest))
         | _ =&gt; return (expr, (token::rest));

fun ParseWhereConditions ((_, TOpeningParanthesis)::tokens) = (ParseWhereConditions tokens) &gt;&gt;= (fn (condition, rest) =&gt;
    case rest
      of [] =&gt; ParseError (~1, &quot;Expected closing paranthesis&quot;)
       | ((_, TClosingParanthesis)::[]) =&gt; return (condition, [])
       | ((_, TClosingParanthesis)::rest) =&gt; (ParseWhereNextCondition ParseWhereConditions (condition, rest))
       | ((columnNo, _)::_) =&gt; ParseError (columnNo, &quot;Expected closing paranthesis&quot;)
   )
  | ParseWhereConditions tokens = (ParseExpr tokens) &gt;&gt;= (fn (expr, tokens) =&gt; (ParseWhereNextCondition ParseWhereConditions) (Single expr, tokens));

fun ParseWhere ((_, TWhere)::tokens) = ParseWhereConditions tokens
  | ParseWhere [] = Result (NoCondition, [])
  | ParseWhere ((columnNo, _)::_) = ParseError (columnNo, &quot;Expected WHERE keyword.&quot;)

fun ParseSelectFromTokens ((columnNo, TSelect)::tokens) = (ParseSelectColNameList tokens)
                                                    &gt;&gt;= (fn (colList, rest) =&gt; (ParseTable rest)
                                                    &gt;&gt;= (fn (tableName, rest) =&gt; (ParseWhere rest)
                                                    &gt;&gt;= (fn (conditions, rest) =&gt; return (colList, tableName, conditions))))
  | ParseSelectFromTokens ((columnNo, _)::tokens) = ParseError (columnNo, &quot;Expected SELECT keyword.&quot;)
  | ParseSelectFromTokens [] = ParseError (~1, &quot;Expected SELECT keyword.&quot;);


fun ParseDeleteFromTokens ((columnNo, TDelete)::tokens) = (ParseTable tokens)
                                                    &gt;&gt;= (fn (tableName, rest) =&gt; (ParseWhere rest)
                                                    &gt;&gt;= (fn (conditions, rest) =&gt; return (tableName, conditions)))
  | ParseDeleteFromTokens ((columnNo, _)::tokens) = ParseError (columnNo, &quot;Expected DELETE keyword.&quot;)
  | ParseDeleteFromTokens [] = ParseError (~1, &quot;Expected DELETE keyword.&quot;);


fun ParseSingleValue [] = ParseError (~1, &quot;Expected a constant value.&quot;)
  | ParseSingleValue (token::rest) = 
    case token
      of (_, (TInt value))        =&gt; return (Int value, rest)
       | (_, (TReal value))       =&gt; return (Real value, rest)
       | (_, (TString value))     =&gt; return (String value, rest)
       | (columnNo, _)              =&gt; ParseError (columnNo, &quot;Expected a constant value.&quot;)

fun ParseValues tokens = (ParseSingleValue tokens)
                         &gt;&gt;= (fn (col, rest) =&gt; case rest of [] =&gt; return (col::nil, rest) | _ =&gt; (ParseValues rest)
                         &gt;&gt;= (fn (cols, rest) =&gt; return (col::cols, rest)));

fun ParseInsertValues ((_, TValues)::rest) = (ParseValues rest)
  | ParseInsertValues ((columnNo, _)::rest) = ParseError (columnNo, &quot;Expected VALUES keyword.&quot;)
  | ParseInsertValues [] = ParseError (~1, &quot;Expected VALUES keyword.&quot;);

fun ParseInsertFromTokens ((_, TInsert)::(_, TInto)::(_, TIdentifier tableName)::tokens) = (ParseInsertValues tokens)
                                                    &gt;&gt;= (fn (conditions, rest) =&gt; return (tableName, conditions))
  | ParseInsertFromTokens ((_, TInsert)::(_, TInto)::(columnNo, _)::tokens) = ParseError (columnNo, &quot;Expected table name.&quot;)
  | ParseInsertFromTokens ((_, TInsert)::(_, TInto)::[]) = ParseError (~1, &quot;Expected table name.&quot;)
  | ParseInsertFromTokens ((_, TInsert)::(columnNo, _)::tokens) = ParseError (columnNo, &quot;Expected INTO keyword.&quot;)
  | ParseInsertFromTokens ((_, TInsert)::[]) = ParseError (~1, &quot;Expected INTO keyword.&quot;)
  | ParseInsertFromTokens ((columnNo, _)::tokens) = ParseError (columnNo, &quot;Expected INSERT keyword.&quot;)
  | ParseInsertFromTokens [] = ParseError (~1, &quot;Expected INSERT keyword.&quot;);

(*
fun ParseQueryFromTokens (head::tokens) = case head
                                          of TSelect =&gt; (ParseSelectFromTokens (head::tokens))
                                                    &gt;&gt;= (fn (cols, tableName, whereConditions) =&gt; return (Select cols, tableName, whereConditions))
                                           | TUpdate =&gt; (ParseUpdateFromTokens (head::tokens))
                                                    &gt;&gt;= (fn (tableName, sets) =&gt; return (Update tableName, sets))
                                           | TInsert =&gt; (ParseInsertFromTokens (head::tokens))
                                                    &gt;&gt;= (fn (tableName, values) =&gt; return (Insert tableName, values))
                                           | TDelete =&gt; (ParseDeleteFromTokens (head::tokens))
                                                    &gt;&gt;= (fn (tableName, whereConditions) =&gt; return (Delete tableName, whereConditions));
*)
          <layout>datatype Token = TSelect
               | TInsert
               | TUpdate
               | TDelete
               | TWhere
               | TInto
               | TFrom
               | TValues
               | TSet
               | TIdentifier of string
               | TReal of real
               | TInt of int
               | TString of string
               | TAnd
               | TOr
               | TLess
               | TGreater
               | TNotEqual
               | TEqual
               | TInvalid of string
               | TOpeningParanthesis
               | TClosingParanthesis
               | TOperatorStar;

fun ParseIntLeft value [] = (SOME value)
  | ParseIntLeft leftVal (ch::x) = if (Char.isDigit ch)
                                   then case (ParseIntLeft (leftVal * 10 + ((ord ch) - 48)) x)
                                          of NONE =&gt; NONE
                                           | (SOME value) =&gt; (SOME value)
                                   else NONE;

fun ParseInt &quot;&quot; = NONE
  | ParseInt value = (ParseIntLeft 0 (String.explode value));

fun subunitary value = if value &gt;= 1.0 then subunitary (value / 10.0) else value;

fun ParseRealLeft value [] = (SOME value)
  | ParseRealLeft leftVal (ch::x) = if (Char.isDigit ch)
                                    then case (ParseRealLeft (leftVal * 10.0 + real((ord ch) - 48)) x)
                                           of NONE =&gt; NONE
                                            | (SOME value) =&gt; (SOME value)
                                    else if (Char.contains &quot;.&quot; ch)
                                         then case (ParseIntLeft 0 x)
                                                of NONE =&gt; NONE
                                                 | (SOME value) =&gt; (SOME (leftVal + (subunitary (real(value)))))
                                         else NONE;

fun ParseReal &quot;&quot; = NONE
  | ParseReal value = (ParseRealLeft 0.0 (String.explode value));

  
fun ParseString &quot;&quot; = NONE
  | ParseString value = if (String.isPrefix &quot;&apos;&quot; value) andalso (String.isSuffix &quot;&apos;&quot; value)
                        then case (String.tokens (fn c =&gt; c = #&quot;&apos;&quot; ) value)
                               of (token::[]) =&gt; (SOME token)
                                | _ =&gt; NONE
                        else NONE;

fun ParseIdentifierChr [] = NONE
  | ParseIdentifierChr (ch::x) = if (Char.isAlpha ch) then (SOME (String.implode (ch::x))) else NONE;

fun ParseIdentifier &quot;&quot; = NONE
  | ParseIdentifier value = (ParseIdentifierChr (String.explode value));

fun ParseDynamic tokenStr = case (ParseInt tokenStr)
                              of (SOME value) =&gt; (TInt value)
                               | NONE =&gt; case (ParseReal tokenStr)
                                           of (SOME value) =&gt; (TReal value)
                                            | NONE =&gt; case ParseString tokenStr
                                                        of (SOME value) =&gt; (TString value)
                                                         | NONE =&gt; case ParseIdentifier tokenStr 
                                                                     of (SOME value) =&gt; (TIdentifier value)
                                                                      | NONE =&gt; (TInvalid tokenStr);

fun lower str = String.translate (fn c =&gt; String.str (Char.toLower c)) str

fun ParseToken tokenStr = case lower tokenStr
                            of &quot;&lt;&quot;      =&gt; TLess
                             | &quot;&gt;&quot;      =&gt; TGreater
                             | &quot;=&quot;      =&gt; TEqual
                             | &quot;~&quot;      =&gt; TNotEqual
                             | &quot;(&quot;      =&gt; TOpeningParanthesis
                             | &quot;)&quot;      =&gt; TClosingParanthesis
                             | &quot;or&quot;     =&gt; TOr
                             | &quot;and&quot;    =&gt; TAnd
                             | &quot;select&quot; =&gt; TSelect
                             | &quot;update&quot; =&gt; TUpdate
                             | &quot;insert&quot; =&gt; TInsert
                             | &quot;delete&quot; =&gt; TDelete
                             | &quot;where&quot;  =&gt; TWhere
                             | &quot;into&quot;   =&gt; TInto
                             | &quot;from&quot;   =&gt; TFrom
                             | &quot;values&quot; =&gt; TValues
                             | &quot;set&quot;    =&gt; TSet
                             | &quot;*&quot;      =&gt; TOperatorStar
                             | value    =&gt; ParseDynamic tokenStr


fun SplitByDelimitersLeft f (lastPos, lastToken) (currentPos, []) = (lastPos, lastToken)::nil
  | SplitByDelimitersLeft f (lastPos, lastToken) (currentPos, (ch::x)) = if (f ch)
                                           then (lastPos, lastToken) ::
                                                (currentPos, ch::nil) ::
                                                (SplitByDelimitersLeft f (currentPos + 1, []) ((currentPos + 1), x))
                                           else (SplitByDelimitersLeft f (lastPos, (List.concat [lastToken, (ch::nil)])) ((currentPos + 1), x)); 

fun SplitByDelimiters f &quot;&quot; = []
  | SplitByDelimiters f s = map (fn (pos, token) =&gt; (pos, (String.implode token))) (SplitByDelimitersLeft f (0, []) (0, (String.explode s)))

fun isNotNonOperatorDelimiter s &quot;&quot; = false
  | isNotNonOperatorDelimiter s delimiters = case String.tokens (fn c =&gt; Char.contains delimiters c) s
                                               of [] =&gt; false
                                                | _ =&gt; true;

fun SplitBySpecialTokens statement = SplitByDelimiters (fn c =&gt; Char.contains &quot; ,=&lt;&gt;~()&quot; c) statement;

fun SplitTokens statement = List.filter (fn (pos, token) =&gt; isNotNonOperatorDelimiter token &quot; ,&quot;) (SplitBySpecialTokens statement);

fun Tokenize statement = map (fn (pos, token) =&gt; (pos, ParseToken token)) (SplitTokens statement);

(*SELECT col1 FROM table WHERE ;*)
(*INSERT INTO table(col1, col2) VALUES 1, &apos;2&apos;;*)
(*UPDATE table SET col1=a WHERE ;*)
(*DELETE FROM table WHERE ;*)

datatype &apos;a ParseState = ParseError of int * string
                       | Result of &apos;a

infixr 9 &gt;&gt;= 
fun a &gt;&gt;= f = case a
                of (ParseError (columnNo, msg)) =&gt; ParseError (columnNo, msg)
                 | (Result result) =&gt; f result;

fun return a = Result a;

datatype ColNameList = All
                     | Columns of (string list);

fun ParseColNameList ((_, (TIdentifier col))::rest) = (ParseColNameList rest)
                                                  &gt;&gt;= (fn (Columns cols, rest) =&gt; return (Columns (col::cols), rest))
  | ParseColNameList tokens = return (Columns [], tokens);

fun ParseSelectColNameList ((_, TOperatorStar)::rest) = return (All, rest)
  | ParseSelectColNameList ((columnNo, (TIdentifier col))::rest) = ParseColNameList ((columnNo, TIdentifier col)::rest)
  | ParseSelectColNameList ((columnNo, _)::rest) = ParseError (columnNo, &quot;Expected columns&quot;)
  | ParseSelectColNameList [] = ParseError (~1, &quot;Expected columns&quot;);

fun ParseTable ((_, TFrom)::(_, TIdentifier tableName)::rest) = return (tableName, rest)
  | ParseTable ((_, TFrom)::(columnNo, _)::rest) = ParseError (columnNo, &quot;Expected table name&quot;)
  | ParseTable ((columnNo, _)::rest) = ParseError (columnNo, &quot;Expected keyword FROM&quot;)
  | ParseTable [] = ParseError (~1, &quot;Expected keyword FROM&quot;);


datatype Value = Int of int
               | Real of real
               | String of string
               | Identifier of string;

datatype Expr = Equal of Value * Value
              | Greater of Value * Value
              | Less of Value * Value
              | NotEqual of Value * Value;

datatype WhereCondition = NoCondition
                        | Single of Expr
                        | And of WhereCondition * WhereCondition
                        | Or of WhereCondition * WhereCondition;


fun ParseValue [] = ParseError (~1, &quot;Expected value or identifier.&quot;)
  | ParseValue (token::rest) = 
    case token
      of (_, (TInt value))        =&gt; return (Int value, rest)
       | (_, (TReal value))       =&gt; return (Real value, rest)
       | (_, (TString value))     =&gt; return (String value, rest)
       | (_, (TIdentifier value)) =&gt; return (Identifier value, rest)
       | (columnNo, _)              =&gt; ParseError (columnNo, &quot;Expected value or identifier.&quot;);

fun ParseExpr tokens = (ParseValue tokens)
                   &gt;&gt;= (fn (rvalue, rest) =&gt;
        (case rest
           of ((_, TEqual)::rest)    =&gt; (ParseValue rest) &gt;&gt;= (fn (lvalue, rest) =&gt; return (Equal (rvalue, lvalue), rest)) 
            | ((_, TGreater)::rest)  =&gt; (ParseValue rest) &gt;&gt;= (fn (lvalue, rest) =&gt; return (Greater (rvalue, lvalue), rest))
            | ((_, TLess)::rest)     =&gt; (ParseValue rest) &gt;&gt;= (fn (lvalue, rest) =&gt; return (Less (rvalue, lvalue), rest))
            | ((_, TNotEqual)::rest) =&gt; (ParseValue rest) &gt;&gt;= (fn (lvalue, rest) =&gt; return (NotEqual (rvalue, lvalue), rest))
            | ((columnNo, _)::rest) =&gt; ParseError (columnNo, &quot;Expected operator&quot;)
            | [] =&gt; ParseError (~1, &quot;Expected operator&quot;)));

fun ParseWhereNextCondition ParseWhereConditions (expr, []) = return (expr, [])
  | ParseWhereNextCondition ParseWhereConditions (expr, (token::rest)) = 
    case token
        of (_, TAnd) =&gt; (ParseWhereConditions rest) &gt;&gt;= (fn (condition, rest) =&gt; return (And (expr, condition), rest))
         | (_, TOr) =&gt; (ParseWhereConditions rest) &gt;&gt;= (fn (condition, rest) =&gt; return (Or (expr, condition), rest))
         | _ =&gt; return (expr, (token::rest));

fun ParseWhereConditions ((_, TOpeningParanthesis)::tokens) = (ParseWhereConditions tokens) &gt;&gt;= (fn (condition, rest) =&gt;
    case rest
      of [] =&gt; ParseError (~1, &quot;Expected closing paranthesis&quot;)
       | ((_, TClosingParanthesis)::[]) =&gt; return (condition, [])
       | ((_, TClosingParanthesis)::rest) =&gt; (ParseWhereNextCondition ParseWhereConditions (condition, rest))
       | ((columnNo, _)::_) =&gt; ParseError (columnNo, &quot;Expected closing paranthesis&quot;)
   )
  | ParseWhereConditions tokens = (ParseExpr tokens) &gt;&gt;= (fn (expr, tokens) =&gt; (ParseWhereNextCondition ParseWhereConditions) (Single expr, tokens));

fun ParseWhere ((_, TWhere)::tokens) = ParseWhereConditions tokens
  | ParseWhere [] = Result (NoCondition, [])
  | ParseWhere ((columnNo, _)::_) = ParseError (columnNo, &quot;Expected WHERE keyword.&quot;)

fun ParseSelectFromTokens ((columnNo, TSelect)::tokens) = (ParseSelectColNameList tokens)
                                                    &gt;&gt;= (fn (colList, rest) =&gt; (ParseTable rest)
                                                    &gt;&gt;= (fn (tableName, rest) =&gt; (ParseWhere rest)
                                                    &gt;&gt;= (fn (conditions, rest) =&gt; return (colList, tableName, conditions))))
  | ParseSelectFromTokens ((columnNo, _)::tokens) = ParseError (columnNo, &quot;Expected SELECT keyword.&quot;)
  | ParseSelectFromTokens [] = ParseError (~1, &quot;Expected SELECT keyword.&quot;);


fun ParseDeleteFromTokens ((columnNo, TDelete)::tokens) = (ParseTable tokens)
                                                    &gt;&gt;= (fn (tableName, rest) =&gt; (ParseWhere rest)
                                                    &gt;&gt;= (fn (conditions, rest) =&gt; return (tableName, conditions)))
  | ParseDeleteFromTokens ((columnNo, _)::tokens) = ParseError (columnNo, &quot;Expected DELETE keyword.&quot;)
  | ParseDeleteFromTokens [] = ParseError (~1, &quot;Expected DELETE keyword.&quot;);


fun ParseSingleValue [] = ParseError (~1, &quot;Expected a constant value.&quot;)
  | ParseSingleValue (token::rest) = 
    case token
      of (_, (TInt value))        =&gt; return (Int value, rest)
       | (_, (TReal value))       =&gt; return (Real value, rest)
       | (_, (TString value))     =&gt; return (String value, rest)
       | (columnNo, _)              =&gt; ParseError (columnNo, &quot;Expected a constant value.&quot;)

fun ParseValues tokens = (ParseSingleValue tokens)
                         &gt;&gt;= (fn (col, rest) =&gt; case rest of [] =&gt; return (col::nil, rest) | _ =&gt; (ParseValues rest)
                         &gt;&gt;= (fn (cols, rest) =&gt; return (col::cols, rest)));

fun ParseInsertValues ((_, TValues)::rest) = (ParseValues rest)
  | ParseInsertValues ((columnNo, _)::rest) = ParseError (columnNo, &quot;Expected VALUES keyword.&quot;)
  | ParseInsertValues [] = ParseError (~1, &quot;Expected VALUES keyword.&quot;);

fun ParseInsertFromTokens ((_, TInsert)::(_, TInto)::(_, TIdentifier tableName)::tokens) = (ParseInsertValues tokens)
                                                    &gt;&gt;= (fn (conditions, rest) =&gt; return (tableName, conditions))
  | ParseInsertFromTokens ((_, TInsert)::(_, TInto)::(columnNo, _)::tokens) = ParseError (columnNo, &quot;Expected table name.&quot;)
  | ParseInsertFromTokens ((_, TInsert)::(_, TInto)::[]) = ParseError (~1, &quot;Expected table name.&quot;)
  | ParseInsertFromTokens ((_, TInsert)::(columnNo, _)::tokens) = ParseError (columnNo, &quot;Expected INTO keyword.&quot;)
  | ParseInsertFromTokens ((_, TInsert)::[]) = ParseError (~1, &quot;Expected INTO keyword.&quot;)
  | ParseInsertFromTokens ((columnNo, _)::tokens) = ParseError (columnNo, &quot;Expected INSERT keyword.&quot;)
  | ParseInsertFromTokens [] = ParseError (~1, &quot;Expected INSERT keyword.&quot;);

(*
fun ParseQueryFromTokens (head::tokens) = case head
                                          of TSelect =&gt; (ParseSelectFromTokens (head::tokens))
                                                    &gt;&gt;= (fn (cols, tableName, whereConditions) =&gt; return (Select cols, tableName, whereConditions))
                                           | TUpdate =&gt; (ParseUpdateFromTokens (head::tokens))
                                                    &gt;&gt;= (fn (tableName, sets) =&gt; return (Update tableName, sets))
                                           | TInsert =&gt; (ParseInsertFromTokens (head::tokens))
                                                    &gt;&gt;= (fn (tableName, values) =&gt; return (Insert tableName, values))
                                           | TDelete =&gt; (ParseDeleteFromTokens (head::tokens))
                                                    &gt;&gt;= (fn (tableName, whereConditions) =&gt; return (Delete tableName, whereConditions));
*)</layout>
        </ml>
      </block>
      <block id="ID1412472179">
        <id>DB colset types</id>
        <color id="ID1412452279">
          <id>CRow</id>
          <list>
            <id>STRING</id>
          </list>
          <layout>colset CRow = list STRING;</layout>
        </color>
        <color id="ID1412452324">
          <id>CTableRows</id>
          <list>
            <id>CRow</id>
          </list>
          <layout>colset CTableRows = list CRow;</layout>
        </color>
        <color id="ID1412452519">
          <id>CColName</id>
          <alias>
            <id>STRING</id>
          </alias>
          <layout>colset CColName = STRING;</layout>
        </color>
        <color id="ID1412455990">
          <id>CColNameList</id>
          <list>
            <id>CColName</id>
          </list>
          <layout>colset CColNameList = list CColName;</layout>
        </color>
        <color id="ID1412461372">
          <id>CCell</id>
          <product>
            <id>BOOL</id>
            <id>STRING</id>
          </product>
          <layout>colset CCell = product BOOL * STRING;</layout>
        </color>
        <color id="ID1412452613">
          <id>CColType</id>
          <enum>
            <id>STRING</id>
            <id>INT</id>
            <id>REAL</id>
            <id>TIME</id>
          </enum>
          <layout>colset CColType = with STRING | INT | REAL | TIME;</layout>
        </color>
        <color id="ID1412452378">
          <id>CColSpec</id>
          <product>
            <id>CColName</id>
            <id>CColType</id>
          </product>
          <layout>colset CColSpec = product CColName * CColType;</layout>
        </color>
        <color id="ID1412452773">
          <id>CTableColSpecs</id>
          <list>
            <id>CColSpec</id>
          </list>
          <layout>colset CTableColSpecs = list CColSpec;</layout>
        </color>
        <color id="ID1412452961">
          <id>CTableName</id>
          <alias>
            <id>STRING</id>
          </alias>
          <layout>colset CTableName = STRING;</layout>
        </color>
        <color id="ID1412453102">
          <id>CTable</id>
          <product>
            <id>CTableName</id>
            <id>CTableColSpecs</id>
            <id>CTableRows</id>
          </product>
          <layout>colset CTable = product CTableName * CTableColSpecs * CTableRows;</layout>
        </color>
        <color id="ID1412463230">
          <id>CAssignment</id>
          <product>
            <id>CColName</id>
            <id>CCell</id>
          </product>
          <layout>colset CAssignment = product CColName * CCell;</layout>
        </color>
        <color id="ID1412462736">
          <id>CAssignmentList</id>
          <list>
            <id>CAssignment</id>
          </list>
          <layout>colset CAssignmentList = list CAssignment;</layout>
        </color>
        <color id="ID1412454879">
          <id>CUserId</id>
          <alias>
            <id>INT</id>
          </alias>
          <layout>colset CUserId = INT;</layout>
        </color>
      </block>
      <block id="ID1412478992">
        <id>Query colset types</id>
        <color id="ID1412458213">
          <id>Operator</id>
          <alias>
            <id>STRING</id>
          </alias>
          <layout>colset Operator = STRING; (*might be deleted*)</layout>
        </color>
        <color id="ID1412458800">
          <id>Operand</id>
          <alias>
            <id>STRING</id>
          </alias>
          <layout>colset Operand = STRING; (*might be deleted*)</layout>
        </color>
        <color id="ID1412457469">
          <id>OperatorList</id>
          <list>
            <id>Operator</id>
          </list>
          <layout>colset OperatorList = list Operator; (*might be deleted*)</layout>
        </color>
        <color id="ID1412457835">
          <id>OperandList</id>
          <list>
            <id>Operand</id>
          </list>
          <layout>colset OperandList = list Operand; (*might be deleted*)</layout>
        </color>
        <color id="ID1412469917">
          <id>CQueryString</id>
          <alias>
            <id>STRING</id>
          </alias>
          <layout>colset CQueryString = STRING;</layout>
        </color>
        <color id="ID1412454394">
          <id>CQueryType</id>
          <enum>
            <id>SELECT</id>
            <id>INSERT</id>
            <id>UPDATE</id>
            <id>DELETE</id>
          </enum>
          <layout>colset CQueryType = with SELECT | INSERT | UPDATE | DELETE;</layout>
        </color>
        <color id="ID1412453767">
          <id>CUserQuery</id>
          <product>
            <id>CUserId</id>
            <id>CQueryString</id>
          </product>
          <layout>colset CUserQuery = product CUserId * CQueryString;</layout>
        </color>
        <color id="ID1412523175">
          <id>CQueryResultCode</id>
          <alias>
            <id>INT</id>
          </alias>
          <layout>colset CQueryResultCode = INT;</layout>
        </color>
        <color id="ID1412524334">
          <id>CQueryResultRows</id>
          <list>
            <id>CRow</id>
          </list>
          <layout>colset CQueryResultRows = list CRow;</layout>
        </color>
        <color id="ID1412508386">
          <id>CQueryResult</id>
          <product>
            <id>CQueryResultCode</id>
            <id>CQueryResultRows</id>
          </product>
          <layout>colset CQueryResult = product CQueryResultCode * CQueryResultRows;</layout>
        </color>
        <color id="ID1412507409">
          <id>CUserQueryResult</id>
          <product>
            <id>CUserId</id>
            <id>CQueryResult</id>
          </product>
          <layout>colset CUserQueryResult = product CUserId * CQueryResult;</layout>
        </color>
        <color id="ID1412527864">
          <id>CInternalQuery</id>
          <product>
            <id>CUserId</id>
            <id>CQueryType</id>
            <id>CQueryString</id>
          </product>
          <layout>colset CInternalQuery = product CUserId * CQueryType * CQueryString;</layout>
        </color>
        <color id="ID1412549852">
          <id>CInternalQueryQueue</id>
          <list>
            <id>CInternalQuery</id>
          </list>
          <layout>colset CInternalQueryQueue = list CInternalQuery;</layout>
        </color>
        <ml id="ID1412465354">datatype WhereConditions = 
     FinalCondition of Operand * Operator * Operand
   | OR of WhereConditions * WhereConditions
   | AND of WhereConditions * WhereConditions;
          <layout>datatype WhereConditions = 
     FinalCondition of Operand * Operator * Operand
   | OR of WhereConditions * WhereConditions
   | AND of WhereConditions * WhereConditions;</layout>
        </ml>
        <ml id="ID1412465285">datatype InternalQuery = 
     SelectQuery of CTableName * CColNameList * WhereConditions
   | InsertQuery of CTableName * CColNameList * CRow
   | UpdateQuery of CTableName * CAssignmentList * WhereConditions
   | DeleteQuery of CTableName * WhereConditions;
          <layout>datatype InternalQuery = 
     SelectQuery of CTableName * CColNameList * WhereConditions
   | InsertQuery of CTableName * CColNameList * CRow
   | UpdateQuery of CTableName * CAssignmentList * WhereConditions
   | DeleteQuery of CTableName * WhereConditions;</layout>
        </ml>
      </block>
      <block id="ID1412476042">
        <id>DB vars</id>
        <var id="ID1412477559">
          <type>
            <id>CQueryString</id>
          </type>
          <id>queryString</id>
          <layout>var queryString : CQueryString;</layout>
        </var>
        <var id="ID1412564386">
          <type>
            <id>CInternalQueryQueue</id>
          </type>
          <id>queryQueue</id>
          <layout>var queryQueue : CInternalQueryQueue;</layout>
        </var>
        <var id="ID1412518713">
          <type>
            <id>CQueryResult</id>
          </type>
          <id>queryResult</id>
          <layout>var queryResult : CQueryResult;</layout>
        </var>
        <var id="ID1412554082">
          <type>
            <id>CUserQuery</id>
          </type>
          <id>userQuery</id>
          <layout>var userQuery : CUserQuery;</layout>
        </var>
        <var id="ID1412517618">
          <type>
            <id>CUserId</id>
          </type>
          <id>userId</id>
          <layout>var userId : CUserId;</layout>
        </var>
      </block>
      <block id="ID1412529057">
        <id>Common functions</id>
        <ml id="ID1412541046">fun GetFirst lst = hd(lst);
          <layout>fun GetFirst lst = hd(lst);</layout>
        </ml>
        <ml id="ID1412535864">fun GetLast lst = hd(rev(lst));
          <layout>fun GetLast lst = hd(rev(lst));</layout>
        </ml>
        <ml id="ID1412543035">fun PushFront lst e = e::lst;
          <layout>fun PushFront lst e = e::lst;</layout>
        </ml>
        <ml id="ID1412544382">fun PushBack(lst : CInternalQueryQueue, e : CInternalQuery) = rev(e::rev(lst));
          <layout>fun PushBack(lst : CInternalQueryQueue, e : CInternalQuery) = rev(e::rev(lst));</layout>
        </ml>
        <ml id="ID1412576079">fun Remove(lst : CInternalQueryQueue, e) = filter(fn x =&gt; x &lt;&gt; e) lst;
          <layout>fun Remove(lst : CInternalQueryQueue, e) = filter(fn x =&gt; x &lt;&gt; e) lst;</layout>
        </ml>
        <ml id="ID1412578511">fun RemoveMulti(lst : CInternalQueryQueue, []) = lst
    | RemoveMulti(lst : CInternalQueryQueue, h::t) = RemoveMulti(Remove(lst, h), t);
          <layout>fun RemoveMulti(lst : CInternalQueryQueue, []) = lst
    | RemoveMulti(lst : CInternalQueryQueue, h::t) = RemoveMulti(Remove(lst, h), t);</layout>
        </ml>
      </block>
      <block id="ID1412558413">
        <id>Query functions</id>
        <ml id="ID1412561370">fun ComputeInternalQuery q : CInternalQuery = (0, SELECT, &quot;&quot;); (*temporary*)
          <layout>fun ComputeInternalQuery q : CInternalQuery = (0, SELECT, &quot;&quot;); (*temporary*)</layout>
        </ml>
        <ml id="ID1412574474">fun GetQueriesToProcess (lst : CInternalQueryQueue) = []; (*temporary*)
          <layout>fun GetQueriesToProcess (lst : CInternalQueryQueue) = []; (*temporary*)</layout>
        </ml>
      </block>
    </globbox>
    <page id="ID6">
      <pageattr name="main"/>
      <place id="ID1412469331">
        <posattr x="-486.000000"
                 y="336.000000"/>
        <fillattr colour="White"
                  pattern=""
                  filled="false"/>
        <lineattr colour="Black"
                  thick="1"
                  type="Solid"/>
        <textattr colour="Black"
                  bold="false"/>
        <text>Users</text>
        <ellipse w="60.000000"
                 h="40.000000"/>
        <token x="-10.000000"
               y="0.000000"/>
        <marking x="0.000000"
                 y="0.000000"
                 hidden="false">
          <snap snap_id="0"
                anchor.horizontal="0"
                anchor.vertical="0"/>
        </marking>
        <type id="ID1412469332">
          <posattr x="-435.500000"
                   y="312.000000"/>
          <fillattr colour="White"
                    pattern="Solid"
                    filled="false"/>
          <lineattr colour="Black"
                    thick="0"
                    type="Solid"/>
          <textattr colour="Black"
                    bold="false"/>
          <text tool="CPN Tools"
                version="4.0.1">CUserId</text>
        </type>
        <initmark id="ID1412469333">
          <posattr x="-429.000000"
                   y="359.000000"/>
          <fillattr colour="White"
                    pattern="Solid"
                    filled="false"/>
          <lineattr colour="Black"
                    thick="0"
                    type="Solid"/>
          <textattr colour="Black"
                    bold="false"/>
          <text tool="CPN Tools"
                version="4.0.1"/>
        </initmark>
      </place>
      <place id="ID1412470162">
        <posattr x="-504.000000"
                 y="97.000000"/>
        <fillattr colour="White"
                  pattern=""
                  filled="false"/>
        <lineattr colour="Black"
                  thick="1"
                  type="Solid"/>
        <textattr colour="Black"
                  bold="false"/>
        <text>Queries</text>
        <ellipse w="60.000000"
                 h="40.000000"/>
        <token x="-10.000000"
               y="0.000000"/>
        <marking x="0.000000"
                 y="0.000000"
                 hidden="false">
          <snap snap_id="0"
                anchor.horizontal="0"
                anchor.vertical="0"/>
        </marking>
        <type id="ID1412470163">
          <posattr x="-437.000000"
                   y="73.000000"/>
          <fillattr colour="White"
                    pattern="Solid"
                    filled="false"/>
          <lineattr colour="Black"
                    thick="0"
                    type="Solid"/>
          <textattr colour="Black"
                    bold="false"/>
          <text tool="CPN Tools"
                version="4.0.1">CQueryString</text>
        </type>
        <initmark id="ID1412470164">
          <posattr x="-447.000000"
                   y="120.000000"/>
          <fillattr colour="White"
                    pattern="Solid"
                    filled="false"/>
          <lineattr colour="Black"
                    thick="0"
                    type="Solid"/>
          <textattr colour="Black"
                    bold="false"/>
          <text tool="CPN Tools"
                version="4.0.1"/>
        </initmark>
      </place>
      <place id="ID1412470434">
        <posattr x="-168.000000"
                 y="106.000000"/>
        <fillattr colour="White"
                  pattern=""
                  filled="false"/>
        <lineattr colour="Black"
                  thick="1"
                  type="Solid"/>
        <textattr colour="Black"
                  bold="false"/>
        <text>Pending 
User 
Queries</text>
        <ellipse w="60.000000"
                 h="40.000000"/>
        <token x="-10.000000"
               y="0.000000"/>
        <marking x="0.000000"
                 y="0.000000"
                 hidden="false">
          <snap snap_id="0"
                anchor.horizontal="0"
                anchor.vertical="0"/>
        </marking>
        <type id="ID1412470435">
          <posattr x="-105.000000"
                   y="82.000000"/>
          <fillattr colour="White"
                    pattern="Solid"
                    filled="false"/>
          <lineattr colour="Black"
                    thick="0"
                    type="Solid"/>
          <textattr colour="Black"
                    bold="false"/>
          <text tool="CPN Tools"
                version="4.0.1">CUserQuery</text>
        </type>
        <initmark id="ID1412470436">
          <posattr x="-111.000000"
                   y="129.000000"/>
          <fillattr colour="White"
                    pattern="Solid"
                    filled="false"/>
          <lineattr colour="Black"
                    thick="0"
                    type="Solid"/>
          <textattr colour="Black"
                    bold="false"/>
          <text tool="CPN Tools"
                version="4.0.1"/>
        </initmark>
      </place>
      <place id="ID1412505038">
        <posattr x="-221.000000"
                 y="336.000000"/>
        <fillattr colour="White"
                  pattern=""
                  filled="false"/>
        <lineattr colour="Black"
                  thick="1"
                  type="Solid"/>
        <textattr colour="Black"
                  bold="false"/>
        <text>Pending
Query
Results</text>
        <ellipse w="60.000000"
                 h="40.000000"/>
        <token x="-10.000000"
               y="0.000000"/>
        <marking x="0.000000"
                 y="0.000000"
                 hidden="false">
          <snap snap_id="0"
                anchor.horizontal="0"
                anchor.vertical="0"/>
        </marking>
        <type id="ID1412505039">
          <posattr x="-138.500000"
                   y="312.000000"/>
          <fillattr colour="White"
                    pattern="Solid"
                    filled="false"/>
          <lineattr colour="Black"
                    thick="0"
                    type="Solid"/>
          <textattr colour="Black"
                    bold="false"/>
          <text tool="CPN Tools"
                version="4.0.1">CUserQueryResult</text>
        </type>
        <initmark id="ID1412505040">
          <posattr x="-164.000000"
                   y="359.000000"/>
          <fillattr colour="White"
                    pattern="Solid"
                    filled="false"/>
          <lineattr colour="Black"
                    thick="0"
                    type="Solid"/>
          <textattr colour="Black"
                    bold="false"/>
          <text tool="CPN Tools"
                version="4.0.1"/>
        </initmark>
      </place>
      <place id="ID1412526668">
        <posattr x="210.000000"
                 y="105.000000"/>
        <fillattr colour="White"
                  pattern=""
                  filled="false"/>
        <lineattr colour="Black"
                  thick="1"
                  type="Solid"/>
        <textattr colour="Black"
                  bold="false"/>
        <text>Internal
Query
Queue</text>
        <ellipse w="60.000000"
                 h="40.000000"/>
        <token x="-10.000000"
               y="0.000000"/>
        <marking x="0.000000"
                 y="0.000000"
                 hidden="false">
          <snap snap_id="0"
                anchor.horizontal="0"
                anchor.vertical="0"/>
        </marking>
        <type id="ID1412526669">
          <posattr x="303.500000"
                   y="81.000000"/>
          <fillattr colour="White"
                    pattern="Solid"
                    filled="false"/>
          <lineattr colour="Black"
                    thick="0"
                    type="Solid"/>
          <textattr colour="Black"
                    bold="false"/>
          <text tool="CPN Tools"
                version="4.0.1">CInternalQueryQueue</text>
        </type>
        <initmark id="ID1412526670">
          <posattr x="266.000000"
                   y="128.000000"/>
          <fillattr colour="White"
                    pattern="Solid"
                    filled="false"/>
          <lineattr colour="Black"
                    thick="0"
                    type="Solid"/>
          <textattr colour="Black"
                    bold="false"/>
          <text tool="CPN Tools"
                version="4.0.1"/>
        </initmark>
      </place>
      <trans id="ID1412469616"
             explicit="false">
        <posattr x="-336.000000"
                 y="192.000000"/>
        <fillattr colour="White"
                  pattern=""
                  filled="false"/>
        <lineattr colour="Black"
                  thick="1"
                  type="solid"/>
        <textattr colour="Black"
                  bold="false"/>
        <text>Submit
Query</text>
        <box w="60.000000"
             h="40.000000"/>
        <binding x="7.200000"
                 y="-3.000000"/>
        <cond id="ID1412469617">
          <posattr x="-375.000000"
                   y="223.000000"/>
          <fillattr colour="White"
                    pattern="Solid"
                    filled="false"/>
          <lineattr colour="Black"
                    thick="0"
                    type="Solid"/>
          <textattr colour="Black"
                    bold="false"/>
          <text tool="CPN Tools"
                version="4.0.1"/>
        </cond>
        <time id="ID1412469618">
          <posattr x="-291.500000"
                   y="223.000000"/>
          <fillattr colour="White"
                    pattern="Solid"
                    filled="false"/>
          <lineattr colour="Black"
                    thick="0"
                    type="Solid"/>
          <textattr colour="Black"
                    bold="false"/>
          <text tool="CPN Tools"
                version="4.0.1"/>
        </time>
        <code id="ID1412469619">
          <posattr x="-271.500000"
                   y="140.000000"/>
          <fillattr colour="White"
                    pattern="Solid"
                    filled="false"/>
          <lineattr colour="Black"
                    thick="0"
                    type="Solid"/>
          <textattr colour="Black"
                    bold="false"/>
          <text tool="CPN Tools"
                version="4.0.1"/>
        </code>
        <priority id="ID1412469621">
          <posattr x="-404.000000"
                   y="161.000000"/>
          <fillattr colour="White"
                    pattern="Solid"
                    filled="false"/>
          <lineattr colour="Black"
                    thick="0"
                    type="Solid"/>
          <textattr colour="Black"
                    bold="false"/>
          <text tool="CPN Tools"
                version="4.0.1"/>
        </priority>
      </trans>
      <trans id="ID1412510349"
             explicit="false">
        <posattr x="-355.000000"
                 y="400.000000"/>
        <fillattr colour="White"
                  pattern=""
                  filled="false"/>
        <lineattr colour="Black"
                  thick="1"
                  type="solid"/>
        <textattr colour="Black"
                  bold="false"/>
        <text>Process
Query
Result</text>
        <box w="60.000000"
             h="40.000000"/>
        <binding x="7.200000"
                 y="-3.000000"/>
        <cond id="ID1412510350">
          <posattr x="-394.000000"
                   y="431.000000"/>
          <fillattr colour="White"
                    pattern="Solid"
                    filled="false"/>
          <lineattr colour="Black"
                    thick="0"
                    type="Solid"/>
          <textattr colour="Black"
                    bold="false"/>
          <text tool="CPN Tools"
                version="4.0.1"/>
        </cond>
        <time id="ID1412510351">
          <posattr x="-310.500000"
                   y="431.000000"/>
          <fillattr colour="White"
                    pattern="Solid"
                    filled="false"/>
          <lineattr colour="Black"
                    thick="0"
                    type="Solid"/>
          <textattr colour="Black"
                    bold="false"/>
          <text tool="CPN Tools"
                version="4.0.1"/>
        </time>
        <code id="ID1412510352">
          <posattr x="-290.500000"
                   y="348.000000"/>
          <fillattr colour="White"
                    pattern="Solid"
                    filled="false"/>
          <lineattr colour="Black"
                    thick="0"
                    type="Solid"/>
          <textattr colour="Black"
                    bold="false"/>
          <text tool="CPN Tools"
                version="4.0.1"/>
        </code>
        <priority id="ID1412510354">
          <posattr x="-423.000000"
                   y="369.000000"/>
          <fillattr colour="White"
                    pattern="Solid"
                    filled="false"/>
          <lineattr colour="Black"
                    thick="0"
                    type="Solid"/>
          <textattr colour="Black"
                    bold="false"/>
          <text tool="CPN Tools"
                version="4.0.1"/>
        </priority>
      </trans>
      <trans id="ID1412525493"
             explicit="false">
        <posattr x="22.000000"
                 y="106.000000"/>
        <fillattr colour="White"
                  pattern=""
                  filled="false"/>
        <lineattr colour="Black"
                  thick="1"
                  type="solid"/>
        <textattr colour="Black"
                  bold="false"/>
        <text>Compute
Internal
Query</text>
        <box w="60.000000"
             h="40.000000"/>
        <binding x="7.200000"
                 y="-3.000000"/>
        <cond id="ID1412525494">
          <posattr x="-17.000000"
                   y="137.000000"/>
          <fillattr colour="White"
                    pattern="Solid"
                    filled="false"/>
          <lineattr colour="Black"
                    thick="0"
                    type="Solid"/>
          <textattr colour="Black"
                    bold="false"/>
          <text tool="CPN Tools"
                version="4.0.1"/>
        </cond>
        <time id="ID1412525495">
          <posattr x="66.500000"
                   y="137.000000"/>
          <fillattr colour="White"
                    pattern="Solid"
                    filled="false"/>
          <lineattr colour="Black"
                    thick="0"
                    type="Solid"/>
          <textattr colour="Black"
                    bold="false"/>
          <text tool="CPN Tools"
                version="4.0.1"/>
        </time>
        <code id="ID1412525496">
          <posattr x="86.500000"
                   y="54.000000"/>
          <fillattr colour="White"
                    pattern="Solid"
                    filled="false"/>
          <lineattr colour="Black"
                    thick="0"
                    type="Solid"/>
          <textattr colour="Black"
                    bold="false"/>
          <text tool="CPN Tools"
                version="4.0.1"/>
        </code>
        <priority id="ID1412525498">
          <posattr x="-46.000000"
                   y="75.000000"/>
          <fillattr colour="White"
                    pattern="Solid"
                    filled="false"/>
          <lineattr colour="Black"
                    thick="0"
                    type="Solid"/>
          <textattr colour="Black"
                    bold="false"/>
          <text tool="CPN Tools"
                version="4.0.1"/>
        </priority>
      </trans>
      <trans id="ID1412589298"
             explicit="false">
        <posattr x="84.000000"
                 y="352.000000"/>
        <fillattr colour="White"
                  pattern=""
                  filled="false"/>
        <lineattr colour="Black"
                  thick="1"
                  type="solid"/>
        <textattr colour="Black"
                  bold="false"/>
        <text>Execute
Internal
Queries</text>
        <box w="60.000000"
             h="40.000000"/>
        <subst subpage="ID1412589308"
               portsock="(ID1412589316,ID1412526668)(ID1412589321,ID1412505038)">
          <subpageinfo id="ID1412589338"
                       name="execute_internal_queries">
            <posattr x="50.000000"
                     y="328.000000"/>
            <fillattr colour="White"
                      pattern="Solid"
                      filled="false"/>
            <lineattr colour="Black"
                      thick="0"
                      type="Solid"/>
            <textattr colour="Black"
                      bold="false"/>
          </subpageinfo>
        </subst>
        <binding x="7.200000"
                 y="-3.000000"/>
        <cond id="ID1412589299">
          <posattr x="45.000000"
                   y="383.000000"/>
          <fillattr colour="White"
                    pattern="Solid"
                    filled="false"/>
          <lineattr colour="Black"
                    thick="0"
                    type="Solid"/>
          <textattr colour="Black"
                    bold="false"/>
          <text tool="CPN Tools"
                version="4.0.1"/>
        </cond>
        <time id="ID1412589300">
          <posattr x="128.500000"
                   y="383.000000"/>
          <fillattr colour="White"
                    pattern="Solid"
                    filled="false"/>
          <lineattr colour="Black"
                    thick="0"
                    type="Solid"/>
          <textattr colour="Black"
                    bold="false"/>
          <text tool="CPN Tools"
                version="4.0.1"/>
        </time>
        <code id="ID1412589301">
          <posattr x="148.500000"
                   y="300.000000"/>
          <fillattr colour="White"
                    pattern="Solid"
                    filled="false"/>
          <lineattr colour="Black"
                    thick="0"
                    type="Solid"/>
          <textattr colour="Black"
                    bold="false"/>
          <text tool="CPN Tools"
                version="4.0.1"/>
        </code>
        <priority id="ID1412589303">
          <posattr x="16.000000"
                   y="321.000000"/>
          <fillattr colour="White"
                    pattern="Solid"
                    filled="false"/>
          <lineattr colour="Black"
                    thick="0"
                    type="Solid"/>
          <textattr colour="Black"
                    bold="false"/>
          <text tool="CPN Tools"
                version="4.0.1"/>
        </priority>
      </trans>
      <arc id="ID1412471640"
           orientation="PtoT"
           order="1">
        <posattr x="0.000000"
                 y="0.000000"/>
        <fillattr colour="White"
                  pattern=""
                  filled="false"/>
        <lineattr colour="Black"
                  thick="1"
                  type="Solid"/>
        <textattr colour="Black"
                  bold="false"/>
        <arrowattr headsize="1.200000"
                   currentcyckle="2"/>
        <transend idref="ID1412469616"/>
        <placeend idref="ID1412470162"/>
        <bendpoint id="ID1412471642"
                   serial="1">
          <posattr x="-439.000000"
                   y="147.000000"/>
          <fillattr colour="White"
                    pattern="Solid"
                    filled="false"/>
          <lineattr colour="Black"
                    thick="0"
                    type="Solid"/>
          <textattr colour="Black"
                    bold="false"/>
        </bendpoint>
        <annot id="ID1412471641">
          <posattr x="-436.500000"
                   y="175.000000"/>
          <fillattr colour="White"
                    pattern="Solid"
                    filled="false"/>
          <lineattr colour="Black"
                    thick="0"
                    type="Solid"/>
          <textattr colour="Black"
                    bold="false"/>
          <text tool="CPN Tools"
                version="4.0.1">queryString</text>
        </annot>
      </arc>
      <arc id="ID1412471903"
           orientation="TtoP"
           order="1">
        <posattr x="0.000000"
                 y="0.000000"/>
        <fillattr colour="White"
                  pattern=""
                  filled="false"/>
        <lineattr colour="Black"
                  thick="1"
                  type="Solid"/>
        <textattr colour="Black"
                  bold="false"/>
        <arrowattr headsize="1.200000"
                   currentcyckle="2"/>
        <transend idref="ID1412469616"/>
        <placeend idref="ID1412470162"/>
        <bendpoint id="ID1412471905"
                   serial="1">
          <posattr x="-378.000000"
                   y="113.000000"/>
          <fillattr colour="White"
                    pattern="Solid"
                    filled="false"/>
          <lineattr colour="Black"
                    thick="0"
                    type="Solid"/>
          <textattr colour="Black"
                    bold="false"/>
        </bendpoint>
        <bendpoint id="ID1412487682"
                   serial="2">
          <posattr x="-433.000000"
                   y="97.000000"/>
          <fillattr colour="White"
                    pattern="Solid"
                    filled="false"/>
          <lineattr colour="Black"
                    thick="0"
                    type="Solid"/>
          <textattr colour="Black"
                    bold="false"/>
        </bendpoint>
        <annot id="ID1412471904">
          <posattr x="-394.000000"
                   y="119.000000"/>
          <fillattr colour="White"
                    pattern="Solid"
                    filled="false"/>
          <lineattr colour="Black"
                    thick="0"
                    type="Solid"/>
          <textattr colour="Black"
                    bold="false"/>
          <text tool="CPN Tools"
                version="4.0.1">queryString</text>
        </annot>
      </arc>
      <arc id="ID1412484479"
           orientation="PtoT"
           order="1">
        <posattr x="0.000000"
                 y="0.000000"/>
        <fillattr colour="White"
                  pattern=""
                  filled="false"/>
        <lineattr colour="Black"
                  thick="1"
                  type="Solid"/>
        <textattr colour="Black"
                  bold="false"/>
        <arrowattr headsize="1.200000"
                   currentcyckle="2"/>
        <transend idref="ID1412469616"/>
        <placeend idref="ID1412469331"/>
        <bendpoint id="ID1412484481"
                   serial="1">
          <posattr x="-378.000000"
                   y="283.000000"/>
          <fillattr colour="White"
                    pattern="Solid"
                    filled="false"/>
          <lineattr colour="Black"
                    thick="0"
                    type="Solid"/>
          <textattr colour="Black"
                    bold="false"/>
        </bendpoint>
        <annot id="ID1412484480">
          <posattr x="-336.500000"
                   y="256.000000"/>
          <fillattr colour="White"
                    pattern="Solid"
                    filled="false"/>
          <lineattr colour="Black"
                    thick="0"
                    type="Solid"/>
          <textattr colour="Black"
                    bold="false"/>
          <text tool="CPN Tools"
                version="4.0.1">userId</text>
        </annot>
      </arc>
      <arc id="ID1412485096"
           orientation="TtoP"
           order="1">
        <posattr x="0.000000"
                 y="0.000000"/>
        <fillattr colour="White"
                  pattern=""
                  filled="false"/>
        <lineattr colour="Black"
                  thick="1"
                  type="Solid"/>
        <textattr colour="Black"
                  bold="false"/>
        <arrowattr headsize="1.200000"
                   currentcyckle="2"/>
        <transend idref="ID1412469616"/>
        <placeend idref="ID1412469331"/>
        <bendpoint id="ID1412485098"
                   serial="1">
          <posattr x="-436.000000"
                   y="252.000000"/>
          <fillattr colour="White"
                    pattern="Solid"
                    filled="false"/>
          <lineattr colour="Black"
                    thick="0"
                    type="Solid"/>
          <textattr colour="Black"
                    bold="false"/>
        </bendpoint>
        <annot id="ID1412485097">
          <posattr x="-384.500000"
                   y="245.000000"/>
          <fillattr colour="White"
                    pattern="Solid"
                    filled="false"/>
          <lineattr colour="Black"
                    thick="0"
                    type="Solid"/>
          <textattr colour="Black"
                    bold="false"/>
          <text tool="CPN Tools"
                version="4.0.1">userId</text>
        </annot>
      </arc>
      <arc id="ID1412488695"
           orientation="TtoP"
           order="1">
        <posattr x="0.000000"
                 y="0.000000"/>
        <fillattr colour="White"
                  pattern=""
                  filled="false"/>
        <lineattr colour="Black"
                  thick="1"
                  type="Solid"/>
        <textattr colour="Black"
                  bold="false"/>
        <arrowattr headsize="1.200000"
                   currentcyckle="2"/>
        <transend idref="ID1412469616"/>
        <placeend idref="ID1412470434"/>
        <annot id="ID1412488696">
          <posattr x="-239.000000"
                   y="150.000000"/>
          <fillattr colour="White"
                    pattern="Solid"
                    filled="false"/>
          <lineattr colour="Black"
                    thick="0"
                    type="Solid"/>
          <textattr colour="Black"
                    bold="false"/>
          <text tool="CPN Tools"
                version="4.0.1">(userId, queryString)</text>
        </annot>
      </arc>
      <arc id="ID1412511357"
           orientation="PtoT"
           order="1">
        <posattr x="0.000000"
                 y="0.000000"/>
        <fillattr colour="White"
                  pattern=""
                  filled="false"/>
        <lineattr colour="Black"
                  thick="1"
                  type="Solid"/>
        <textattr colour="Black"
                  bold="false"/>
        <arrowattr headsize="1.200000"
                   currentcyckle="2"/>
        <transend idref="ID1412510349"/>
        <placeend idref="ID1412505038"/>
        <annot id="ID1412511358">
          <posattr x="-225.000000"
                   y="381.000000"/>
          <fillattr colour="White"
                    pattern="Solid"
                    filled="false"/>
          <lineattr colour="Black"
                    thick="0"
                    type="Solid"/>
          <textattr colour="Black"
                    bold="false"/>
          <text tool="CPN Tools"
                version="4.0.1">(userId, queryResult)</text>
        </annot>
      </arc>
      <arc id="ID1412512369"
           orientation="PtoT"
           order="2">
        <posattr x="0.000000"
                 y="0.000000"/>
        <fillattr colour="White"
                  pattern=""
                  filled="false"/>
        <lineattr colour="Black"
                  thick="1"
                  type="Solid"/>
        <textattr colour="Black"
                  bold="false"/>
        <arrowattr headsize="1.200000"
                   currentcyckle="2"/>
        <transend idref="ID1412510349"/>
        <placeend idref="ID1412469331"/>
        <annot id="ID1412512370">
          <posattr x="-437.500000"
                   y="381.000000"/>
          <fillattr colour="White"
                    pattern="Solid"
                    filled="false"/>
          <lineattr colour="Black"
                    thick="0"
                    type="Solid"/>
          <textattr colour="Black"
                    bold="false"/>
          <text tool="CPN Tools"
                version="4.0.1">userId</text>
        </annot>
      </arc>
      <arc id="ID1412513393"
           orientation="TtoP"
           order="1">
        <posattr x="0.000000"
                 y="0.000000"/>
        <fillattr colour="White"
                  pattern=""
                  filled="false"/>
        <lineattr colour="Black"
                  thick="1"
                  type="Solid"/>
        <textattr colour="Black"
                  bold="false"/>
        <arrowattr headsize="1.200000"
                   currentcyckle="2"/>
        <transend idref="ID1412510349"/>
        <placeend idref="ID1412469331"/>
        <bendpoint id="ID1412513395"
                   serial="1">
          <posattr x="-398.000000"
                   y="336.000000"/>
          <fillattr colour="White"
                    pattern="Solid"
                    filled="false"/>
          <lineattr colour="Black"
                    thick="0"
                    type="Solid"/>
          <textattr colour="Black"
                    bold="false"/>
        </bendpoint>
        <annot id="ID1412513394">
          <posattr x="-406.000000"
                   y="347.000000"/>
          <fillattr colour="White"
                    pattern="Solid"
                    filled="false"/>
          <lineattr colour="Black"
                    thick="0"
                    type="Solid"/>
          <textattr colour="Black"
                    bold="false"/>
          <text tool="CPN Tools"
                version="4.0.1">userId</text>
        </annot>
      </arc>
      <arc id="ID1412551945"
           orientation="PtoT"
           order="1">
        <posattr x="0.000000"
                 y="0.000000"/>
        <fillattr colour="White"
                  pattern=""
                  filled="false"/>
        <lineattr colour="Black"
                  thick="1"
                  type="Solid"/>
        <textattr colour="Black"
                  bold="false"/>
        <arrowattr headsize="1.200000"
                   currentcyckle="2"/>
        <transend idref="ID1412525493"/>
        <placeend idref="ID1412470434"/>
        <annot id="ID1412551946">
          <posattr x="-73.000000"
                   y="117.000000"/>
          <fillattr colour="White"
                    pattern="Solid"
                    filled="false"/>
          <lineattr colour="Black"
                    thick="0"
                    type="Solid"/>
          <textattr colour="Black"
                    bold="false"/>
          <text tool="CPN Tools"
                version="4.0.1">userQuery</text>
        </annot>
      </arc>
      <arc id="ID1412554795"
           orientation="PtoT"
           order="1">
        <posattr x="0.000000"
                 y="0.000000"/>
        <fillattr colour="White"
                  pattern=""
                  filled="false"/>
        <lineattr colour="Black"
                  thick="1"
                  type="Solid"/>
        <textattr colour="Black"
                  bold="false"/>
        <arrowattr headsize="1.200000"
                   currentcyckle="2"/>
        <transend idref="ID1412525493"/>
        <placeend idref="ID1412526668"/>
        <bendpoint id="ID1412554797"
                   serial="1">
          <posattr x="103.000000"
                   y="142.000000"/>
          <fillattr colour="White"
                    pattern="Solid"
                    filled="false"/>
          <lineattr colour="Black"
                    thick="0"
                    type="Solid"/>
          <textattr colour="Black"
                    bold="false"/>
        </bendpoint>
        <annot id="ID1412554796">
          <posattr x="119.000000"
                   y="154.000000"/>
          <fillattr colour="White"
                    pattern="Solid"
                    filled="false"/>
          <lineattr colour="Black"
                    thick="0"
                    type="Solid"/>
          <textattr colour="Black"
                    bold="false"/>
          <text tool="CPN Tools"
                version="4.0.1">queryQueue</text>
        </annot>
      </arc>
      <arc id="ID1412556234"
           orientation="TtoP"
           order="1">
        <posattr x="0.000000"
                 y="0.000000"/>
        <fillattr colour="White"
                  pattern=""
                  filled="false"/>
        <lineattr colour="Black"
                  thick="1"
                  type="Solid"/>
        <textattr colour="Black"
                  bold="false"/>
        <arrowattr headsize="1.200000"
                   currentcyckle="2"/>
        <transend idref="ID1412525493"/>
        <placeend idref="ID1412526668"/>
        <bendpoint id="ID1412556236"
                   serial="1">
          <posattr x="110.000000"
                   y="54.000000"/>
          <fillattr colour="White"
                    pattern="Solid"
                    filled="false"/>
          <lineattr colour="Black"
                    thick="0"
                    type="Solid"/>
          <textattr colour="Black"
                    bold="false"/>
        </bendpoint>
        <annot id="ID1412556235">
          <posattr x="157.000000"
                   y="45.000000"/>
          <fillattr colour="White"
                    pattern="Solid"
                    filled="false"/>
          <lineattr colour="Black"
                    thick="0"
                    type="Solid"/>
          <textattr colour="Black"
                    bold="false"/>
          <text tool="CPN Tools"
                version="4.0.1">PushBack(queryQueue, (ComputeInternalQuery(userQuery)))</text>
        </annot>
      </arc>
      <arc id="ID1412589304"
           orientation="PtoT"
           order="1">
        <posattr x="0.000000"
                 y="0.000000"/>
        <fillattr colour="White"
                  pattern=""
                  filled="false"/>
        <lineattr colour="Black"
                  thick="1"
                  type="Solid"/>
        <textattr colour="Black"
                  bold="false"/>
        <arrowattr headsize="1.200000"
                   currentcyckle="2"/>
        <transend idref="ID1412589298"/>
        <placeend idref="ID1412526668"/>
        <annot id="ID1412589305">
          <posattr x="167.000000"
                   y="238.000000"/>
          <fillattr colour="White"
                    pattern="Solid"
                    filled="false"/>
          <lineattr colour="Black"
                    thick="0"
                    type="Solid"/>
          <textattr colour="Black"
                    bold="false"/>
          <text tool="CPN Tools"
                version="4.0.1"/>
        </annot>
      </arc>
      <arc id="ID1412589306"
           orientation="TtoP"
           order="1">
        <posattr x="0.000000"
                 y="0.000000"/>
        <fillattr colour="White"
                  pattern=""
                  filled="false"/>
        <lineattr colour="Black"
                  thick="1"
                  type="Solid"/>
        <textattr colour="Black"
                  bold="false"/>
        <arrowattr headsize="1.200000"
                   currentcyckle="2"/>
        <transend idref="ID1412589298"/>
        <placeend idref="ID1412505038"/>
        <annot id="ID1412589307">
          <posattr x="-68.000000"
                   y="329.000000"/>
          <fillattr colour="White"
                    pattern="Solid"
                    filled="false"/>
          <lineattr colour="Black"
                    thick="0"
                    type="Solid"/>
          <textattr colour="Black"
                    bold="false"/>
          <text tool="CPN Tools"
                version="4.0.1"/>
        </annot>
      </arc>
      <constraints/>
    </page>
    <page id="ID1412589308">
      <pageattr name="execute_internal_queries"/>
      <place id="ID1412589316">
        <posattr x="210.000000"
                 y="105.000000"/>
        <fillattr colour="White"
                  pattern=""
                  filled="false"/>
        <lineattr colour="Black"
                  thick="1"
                  type="Solid"/>
        <textattr colour="Black"
                  bold="false"/>
        <text>Internal
Query
Queue</text>
        <ellipse w="60.000000"
                 h="40.000000"/>
        <token x="-10.000000"
               y="0.000000"/>
        <marking x="0.000000"
                 y="0.000000"
                 hidden="false">
          <snap snap_id="0"
                anchor.horizontal="0"
                anchor.vertical="0"/>
        </marking>
        <type id="ID1412589317">
          <posattr x="303.500000"
                   y="81.000000"/>
          <fillattr colour="White"
                    pattern="Solid"
                    filled="false"/>
          <lineattr colour="Black"
                    thick="0"
                    type="Solid"/>
          <textattr colour="Black"
                    bold="false"/>
          <text tool="CPN Tools"
                version="4.0.1">CInternalQueryQueue</text>
        </type>
        <initmark id="ID1412589318">
          <posattr x="266.000000"
                   y="128.000000"/>
          <fillattr colour="White"
                    pattern="Solid"
                    filled="false"/>
          <lineattr colour="Black"
                    thick="0"
                    type="Solid"/>
          <textattr colour="Black"
                    bold="false"/>
          <text tool="CPN Tools"
                version="4.0.1"/>
        </initmark>
        <port id="ID1412589355"
              type="In">
          <posattr x="185.000000"
                   y="88.000000"/>
          <fillattr colour="White"
                    pattern="Solid"
                    filled="false"/>
          <lineattr colour="Black"
                    thick="0"
                    type="Solid"/>
          <textattr colour="Black"
                    bold="false"/>
        </port>
      </place>
      <place id="ID1412589321">
        <posattr x="-378.000000"
                 y="368.000000"/>
        <fillattr colour="White"
                  pattern=""
                  filled="false"/>
        <lineattr colour="Black"
                  thick="1"
                  type="Solid"/>
        <textattr colour="Black"
                  bold="false"/>
        <text>Pending
Query
Results</text>
        <ellipse w="60.000000"
                 h="40.000000"/>
        <token x="-10.000000"
               y="0.000000"/>
        <marking x="0.000000"
                 y="0.000000"
                 hidden="false">
          <snap snap_id="0"
                anchor.horizontal="0"
                anchor.vertical="0"/>
        </marking>
        <type id="ID1412589322">
          <posattr x="-295.500000"
                   y="344.000000"/>
          <fillattr colour="White"
                    pattern="Solid"
                    filled="false"/>
          <lineattr colour="Black"
                    thick="0"
                    type="Solid"/>
          <textattr colour="Black"
                    bold="false"/>
          <text tool="CPN Tools"
                version="4.0.1">CUserQueryResult</text>
        </type>
        <initmark id="ID1412589323">
          <posattr x="-321.000000"
                   y="391.000000"/>
          <fillattr colour="White"
                    pattern="Solid"
                    filled="false"/>
          <lineattr colour="Black"
                    thick="0"
                    type="Solid"/>
          <textattr colour="Black"
                    bold="false"/>
          <text tool="CPN Tools"
                version="4.0.1"/>
        </initmark>
        <port id="ID1412589358"
              type="Out">
          <posattr x="-402.000000"
                   y="351.000000"/>
          <fillattr colour="White"
                    pattern="Solid"
                    filled="false"/>
          <lineattr colour="Black"
                    thick="0"
                    type="Solid"/>
          <textattr colour="Black"
                    bold="false"/>
        </port>
      </place>
      <trans id="ID1412589310"
             explicit="false">
        <posattr x="84.000000"
                 y="352.000000"/>
        <fillattr colour="White"
                  pattern=""
                  filled="false"/>
        <lineattr colour="Black"
                  thick="1"
                  type="solid"/>
        <textattr colour="Black"
                  bold="false"/>
        <text>Execute
Internal
Queries</text>
        <box w="60.000000"
             h="40.000000"/>
        <binding x="7.200000"
                 y="-3.000000"/>
        <cond id="ID1412589311">
          <posattr x="45.000000"
                   y="383.000000"/>
          <fillattr colour="White"
                    pattern="Solid"
                    filled="false"/>
          <lineattr colour="Black"
                    thick="0"
                    type="Solid"/>
          <textattr colour="Black"
                    bold="false"/>
          <text tool="CPN Tools"
                version="4.0.1"/>
        </cond>
        <time id="ID1412589312">
          <posattr x="128.500000"
                   y="383.000000"/>
          <fillattr colour="White"
                    pattern="Solid"
                    filled="false"/>
          <lineattr colour="Black"
                    thick="0"
                    type="Solid"/>
          <textattr colour="Black"
                    bold="false"/>
          <text tool="CPN Tools"
                version="4.0.1"/>
        </time>
        <code id="ID1412589313">
          <posattr x="148.500000"
                   y="300.000000"/>
          <fillattr colour="White"
                    pattern="Solid"
                    filled="false"/>
          <lineattr colour="Black"
                    thick="0"
                    type="Solid"/>
          <textattr colour="Black"
                    bold="false"/>
          <text tool="CPN Tools"
                version="4.0.1"/>
        </code>
        <priority id="ID1412589315">
          <posattr x="16.000000"
                   y="321.000000"/>
          <fillattr colour="White"
                    pattern="Solid"
                    filled="false"/>
          <lineattr colour="Black"
                    thick="0"
                    type="Solid"/>
          <textattr colour="Black"
                    bold="false"/>
          <text tool="CPN Tools"
                version="4.0.1"/>
        </priority>
      </trans>
      <arc id="ID1412589319"
           orientation="PtoT"
           order="1">
        <posattr x="0.000000"
                 y="0.000000"/>
        <fillattr colour="White"
                  pattern=""
                  filled="false"/>
        <lineattr colour="Black"
                  thick="1"
                  type="Solid"/>
        <textattr colour="Black"
                  bold="false"/>
        <arrowattr headsize="1.200000"
                   currentcyckle="2"/>
        <transend idref="ID1412589310"/>
        <placeend idref="ID1412589316"/>
        <bendpoint id="ID1412589297"
                   serial="1">
          <posattr x="210.000000"
                   y="252.000000"/>
          <fillattr colour="White"
                    pattern="Solid"
                    filled="false"/>
          <lineattr colour="Black"
                    thick="0"
                    type="Solid"/>
          <textattr colour="Black"
                    bold="false"/>
        </bendpoint>
        <annot id="ID1412589320">
          <posattr x="196.000000"
                   y="306.000000"/>
          <fillattr colour="White"
                    pattern="Solid"
                    filled="false"/>
          <lineattr colour="Black"
                    thick="0"
                    type="Solid"/>
          <textattr colour="Black"
                    bold="false"/>
          <text tool="CPN Tools"
                version="4.0.1">queryQueue</text>
        </annot>
      </arc>
      <arc id="ID1412589324"
           orientation="TtoP"
           order="1">
        <posattr x="0.000000"
                 y="0.000000"/>
        <fillattr colour="White"
                  pattern=""
                  filled="false"/>
        <lineattr colour="Black"
                  thick="1"
                  type="Solid"/>
        <textattr colour="Black"
                  bold="false"/>
        <arrowattr headsize="1.200000"
                   currentcyckle="2"/>
        <transend idref="ID1412589310"/>
        <placeend idref="ID1412589321"/>
        <annot id="ID1412589325">
          <posattr x="-150.500000"
                   y="374.000000"/>
          <fillattr colour="White"
                    pattern="Solid"
                    filled="false"/>
          <lineattr colour="Black"
                    thick="0"
                    type="Solid"/>
          <textattr colour="Black"
                    bold="false"/>
          <text tool="CPN Tools"
                version="4.0.1">empty (*TEMPORARY*)</text>
        </annot>
      </arc>
      <arc id="ID1412595369"
           orientation="TtoP"
           order="1">
        <posattr x="0.000000"
                 y="0.000000"/>
        <fillattr colour="White"
                  pattern=""
                  filled="false"/>
        <lineattr colour="Black"
                  thick="1"
                  type="Solid"/>
        <textattr colour="Black"
                  bold="false"/>
        <arrowattr headsize="1.200000"
                   currentcyckle="2"/>
        <transend idref="ID1412589310"/>
        <placeend idref="ID1412589316"/>
        <bendpoint id="ID1412595371"
                   serial="1">
          <posattr x="62.000000"
                   y="200.000000"/>
          <fillattr colour="White"
                    pattern="Solid"
                    filled="false"/>
          <lineattr colour="Black"
                    thick="0"
                    type="Solid"/>
          <textattr colour="Black"
                    bold="false"/>
        </bendpoint>
        <annot id="ID1412595370">
          <posattr x="-29.000000"
                   y="184.000000"/>
          <fillattr colour="White"
                    pattern="Solid"
                    filled="false"/>
          <lineattr colour="Black"
                    thick="0"
                    type="Solid"/>
          <textattr colour="Black"
                    bold="false"/>
          <text tool="CPN Tools"
                version="4.0.1">RemoveMulti(queryQueue, GetQueriesToProcess(queryQueue))</text>
        </annot>
      </arc>
      <constraints/>
    </page>
    <instances>
      <instance id="ID2149"
                page="ID6">
        <instance id="ID1412589339"
                  trans="ID1412589298"/>
      </instance>
    </instances>
    <options>
      <option name="realtimestamp">
        <value>
          <boolean>false</boolean>
        </value>
      </option>
      <option name="fair_be">
        <value>
          <boolean>false</boolean>
        </value>
      </option>
      <option name="global_fairness">
        <value>
          <boolean>false</boolean>
        </value>
      </option>
      <option name="outputdirectory">
        <value>
          <text>&lt;same as model&gt;</text>
        </value>
      </option>
      <option name="extensions.10003.enable">
        <value>
          <boolean>true</boolean>
        </value>
      </option>
      <option name="extensions.10001.enable">
        <value>
          <boolean>true</boolean>
        </value>
      </option>
      <option name="extensions.10005.enable">
        <value>
          <boolean>true</boolean>
        </value>
      </option>
      <option name="extensions.10002.enable">
        <value>
          <boolean>true</boolean>
        </value>
      </option>
      <option name="extensions.10006.enable">
        <value>
          <boolean>true</boolean>
        </value>
      </option>
      <option name="repavg">
        <value>
          <boolean>true</boolean>
        </value>
      </option>
      <option name="repciavg">
        <value>
          <boolean>true</boolean>
        </value>
      </option>
      <option name="repcount">
        <value>
          <boolean>false</boolean>
        </value>
      </option>
      <option name="repfirstval">
        <value>
          <boolean>false</boolean>
        </value>
      </option>
      <option name="replastval">
        <value>
          <boolean>false</boolean>
        </value>
      </option>
      <option name="repmax">
        <value>
          <boolean>true</boolean>
        </value>
      </option>
      <option name="repmin">
        <value>
          <boolean>true</boolean>
        </value>
      </option>
      <option name="repssquare">
        <value>
          <boolean>false</boolean>
        </value>
      </option>
      <option name="repssqdev">
        <value>
          <boolean>false</boolean>
        </value>
      </option>
      <option name="repstddev">
        <value>
          <boolean>true</boolean>
        </value>
      </option>
      <option name="repsum">
        <value>
          <boolean>false</boolean>
        </value>
      </option>
      <option name="repvariance">
        <value>
          <boolean>false</boolean>
        </value>
      </option>
      <option name="avg">
        <value>
          <boolean>true</boolean>
        </value>
      </option>
      <option name="ciavg">
        <value>
          <boolean>false</boolean>
        </value>
      </option>
      <option name="count">
        <value>
          <boolean>true</boolean>
        </value>
      </option>
      <option name="firstval">
        <value>
          <boolean>false</boolean>
        </value>
      </option>
      <option name="lastval">
        <value>
          <boolean>false</boolean>
        </value>
      </option>
      <option name="max">
        <value>
          <boolean>true</boolean>
        </value>
      </option>
      <option name="min">
        <value>
          <boolean>true</boolean>
        </value>
      </option>
      <option name="ssquare">
        <value>
          <boolean>false</boolean>
        </value>
      </option>
      <option name="ssqdev">
        <value>
          <boolean>false</boolean>
        </value>
      </option>
      <option name="stddev">
        <value>
          <boolean>false</boolean>
        </value>
      </option>
      <option name="sum">
        <value>
          <boolean>false</boolean>
        </value>
      </option>
      <option name="variance">
        <value>
          <boolean>false</boolean>
        </value>
      </option>
      <option name="firstupdate">
        <value>
          <boolean>false</boolean>
        </value>
      </option>
      <option name="interval">
        <value>
          <boolean>false</boolean>
        </value>
      </option>
      <option name="lastupdate">
        <value>
          <boolean>false</boolean>
        </value>
      </option>
      <option name="untimedavg">
        <value>
          <boolean>true</boolean>
        </value>
      </option>
      <option name="untimedciavg">
        <value>
          <boolean>false</boolean>
        </value>
      </option>
      <option name="untimedcount">
        <value>
          <boolean>true</boolean>
        </value>
      </option>
      <option name="untimedfirstval">
        <value>
          <boolean>false</boolean>
        </value>
      </option>
      <option name="untimedlastval">
        <value>
          <boolean>false</boolean>
        </value>
      </option>
      <option name="untimedmax">
        <value>
          <boolean>true</boolean>
        </value>
      </option>
      <option name="untimedmin">
        <value>
          <boolean>true</boolean>
        </value>
      </option>
      <option name="untimedssquare">
        <value>
          <boolean>false</boolean>
        </value>
      </option>
      <option name="untimedssqdev">
        <value>
          <boolean>false</boolean>
        </value>
      </option>
      <option name="untimedstddev">
        <value>
          <boolean>false</boolean>
        </value>
      </option>
      <option name="untimedsum">
        <value>
          <boolean>true</boolean>
        </value>
      </option>
      <option name="untimedvariance">
        <value>
          <boolean>false</boolean>
        </value>
      </option>
    </options>
    <binders>
      <cpnbinder id="ID1412538433"
                 x="1005"
                 y="197"
                 width="1129"
                 height="617">
        <sheets>
          <cpnsheet id="ID1412538422"
                    panx="35.000000"
                    pany="207.000000"
                    zoom="1.000000"
                    instance="ID2149">
            <zorder>
              <position value="0"/>
            </zorder>
          </cpnsheet>
          <cpnsheet id="ID1412590208"
                    panx="-33.000000"
                    pany="178.000000"
                    zoom="1.000000"
                    instance="ID1412589339">
            <zorder>
              <position value="0"/>
            </zorder>
          </cpnsheet>
        </sheets>
        <zorder>
          <position value="0"/>
          <position value="1"/>
        </zorder>
      </cpnbinder>
    </binders>
    <monitorblock name="Monitors"/>
    <IndexNode expanded="true">
      <IndexNode expanded="false"/>
      <IndexNode expanded="false"/>
      <IndexNode expanded="false">
        <IndexNode expanded="false"/>
        <IndexNode expanded="false"/>
        <IndexNode expanded="false"/>
        <IndexNode expanded="false"/>
        <IndexNode expanded="false">
          <IndexNode expanded="false">
            <IndexNode expanded="false">
              <IndexNode expanded="false"/>
              <IndexNode expanded="false"/>
              <IndexNode expanded="false"/>
              <IndexNode expanded="false"/>
              <IndexNode expanded="false"/>
              <IndexNode expanded="false"/>
              <IndexNode expanded="false"/>
              <IndexNode expanded="false"/>
              <IndexNode expanded="false"/>
              <IndexNode expanded="false"/>
              <IndexNode expanded="false"/>
              <IndexNode expanded="false"/>
              <IndexNode expanded="false"/>
              <IndexNode expanded="false"/>
              <IndexNode expanded="false"/>
            </IndexNode>
            <IndexNode expanded="false">
              <IndexNode expanded="false"/>
              <IndexNode expanded="false"/>
              <IndexNode expanded="false"/>
              <IndexNode expanded="false"/>
              <IndexNode expanded="false"/>
              <IndexNode expanded="false"/>
              <IndexNode expanded="false"/>
              <IndexNode expanded="false"/>
              <IndexNode expanded="false"/>
              <IndexNode expanded="false"/>
              <IndexNode expanded="false"/>
              <IndexNode expanded="false"/>
            </IndexNode>
          </IndexNode>
          <IndexNode expanded="false">
            <IndexNode expanded="false"/>
            <IndexNode expanded="false"/>
            <IndexNode expanded="false"/>
            <IndexNode expanded="false"/>
            <IndexNode expanded="false"/>
            <IndexNode expanded="false"/>
            <IndexNode expanded="false"/>
            <IndexNode expanded="false"/>
            <IndexNode expanded="false"/>
            <IndexNode expanded="false"/>
            <IndexNode expanded="false"/>
            <IndexNode expanded="false"/>
          </IndexNode>
        </IndexNode>
        <IndexNode expanded="false">
          <IndexNode expanded="false"/>
          <IndexNode expanded="false"/>
          <IndexNode expanded="false"/>
          <IndexNode expanded="false"/>
          <IndexNode expanded="false"/>
        </IndexNode>
      </IndexNode>
      <IndexNode expanded="false">
        <IndexNode expanded="false"/>
      </IndexNode>
      <IndexNode expanded="true">
        <IndexNode expanded="false">
          <IndexNode expanded="true"/>
          <IndexNode expanded="true"/>
          <IndexNode expanded="true"/>
        </IndexNode>
        <IndexNode expanded="false">
          <IndexNode expanded="false"/>
          <IndexNode expanded="true"/>
          <IndexNode expanded="false"/>
          <IndexNode expanded="false"/>
          <IndexNode expanded="false"/>
          <IndexNode expanded="false"/>
          <IndexNode expanded="true"/>
        </IndexNode>
        <IndexNode expanded="true">
          <IndexNode expanded="false"/>
        </IndexNode>
        <IndexNode expanded="false">
          <IndexNode expanded="true"/>
          <IndexNode expanded="true"/>
          <IndexNode expanded="true"/>
          <IndexNode expanded="true"/>
          <IndexNode expanded="true"/>
          <IndexNode expanded="true"/>
          <IndexNode expanded="true"/>
          <IndexNode expanded="true"/>
          <IndexNode expanded="true"/>
          <IndexNode expanded="true"/>
          <IndexNode expanded="true"/>
          <IndexNode expanded="true"/>
          <IndexNode expanded="true"/>
        </IndexNode>
        <IndexNode expanded="false">
          <IndexNode expanded="true"/>
          <IndexNode expanded="true"/>
          <IndexNode expanded="true"/>
          <IndexNode expanded="true"/>
          <IndexNode expanded="true"/>
          <IndexNode expanded="true"/>
          <IndexNode expanded="true"/>
          <IndexNode expanded="true"/>
          <IndexNode expanded="true"/>
          <IndexNode expanded="true"/>
          <IndexNode expanded="true"/>
          <IndexNode expanded="true"/>
          <IndexNode expanded="true"/>
          <IndexNode expanded="false"/>
          <IndexNode expanded="true"/>
        </IndexNode>
        <IndexNode expanded="true">
          <IndexNode expanded="true"/>
          <IndexNode expanded="true"/>
          <IndexNode expanded="true"/>
          <IndexNode expanded="true"/>
          <IndexNode expanded="true"/>
        </IndexNode>
        <IndexNode expanded="true">
          <IndexNode expanded="true"/>
          <IndexNode expanded="true"/>
          <IndexNode expanded="true"/>
          <IndexNode expanded="true"/>
          <IndexNode expanded="true"/>
          <IndexNode expanded="true"/>
        </IndexNode>
        <IndexNode expanded="true">
          <IndexNode expanded="true"/>
          <IndexNode expanded="true"/>
        </IndexNode>
      </IndexNode>
      <IndexNode expanded="false"/>
      <IndexNode expanded="true">
        <IndexNode expanded="true"/>
      </IndexNode>
    </IndexNode>
  </cpnet>
</workspaceElements>